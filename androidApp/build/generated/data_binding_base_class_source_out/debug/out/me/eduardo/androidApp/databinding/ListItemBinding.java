// Generated by view binder compiler. Do not edit!
package me.eduardo.androidApp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import me.eduardo.androidApp.R;

public final class ListItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView ivPrevWeatherIcon;

  @NonNull
  public final TextView tvPrevDate;

  @NonNull
  public final TextView tvPrevDescription;

  @NonNull
  public final TextView tvPrevMain;

  @NonNull
  public final TextView tvPrevMaxTemperature;

  @NonNull
  public final TextView tvPrevMinTemperature;

  private ListItemBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView ivPrevWeatherIcon,
      @NonNull TextView tvPrevDate, @NonNull TextView tvPrevDescription,
      @NonNull TextView tvPrevMain, @NonNull TextView tvPrevMaxTemperature,
      @NonNull TextView tvPrevMinTemperature) {
    this.rootView = rootView;
    this.ivPrevWeatherIcon = ivPrevWeatherIcon;
    this.tvPrevDate = tvPrevDate;
    this.tvPrevDescription = tvPrevDescription;
    this.tvPrevMain = tvPrevMain;
    this.tvPrevMaxTemperature = tvPrevMaxTemperature;
    this.tvPrevMinTemperature = tvPrevMinTemperature;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ListItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ListItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.list_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ListItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.iv_prev_weather_icon;
      ImageView ivPrevWeatherIcon = rootView.findViewById(id);
      if (ivPrevWeatherIcon == null) {
        break missingId;
      }

      id = R.id.tv_prev_date;
      TextView tvPrevDate = rootView.findViewById(id);
      if (tvPrevDate == null) {
        break missingId;
      }

      id = R.id.tv_prev_description;
      TextView tvPrevDescription = rootView.findViewById(id);
      if (tvPrevDescription == null) {
        break missingId;
      }

      id = R.id.tv_prev_main;
      TextView tvPrevMain = rootView.findViewById(id);
      if (tvPrevMain == null) {
        break missingId;
      }

      id = R.id.tv_prev_max_temperature;
      TextView tvPrevMaxTemperature = rootView.findViewById(id);
      if (tvPrevMaxTemperature == null) {
        break missingId;
      }

      id = R.id.tv_prev_min_temperature;
      TextView tvPrevMinTemperature = rootView.findViewById(id);
      if (tvPrevMinTemperature == null) {
        break missingId;
      }

      return new ListItemBinding((ConstraintLayout) rootView, ivPrevWeatherIcon, tvPrevDate,
          tvPrevDescription, tvPrevMain, tvPrevMaxTemperature, tvPrevMinTemperature);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
